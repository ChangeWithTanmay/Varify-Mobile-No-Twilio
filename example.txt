const express = require("express");
const bodyParser = require("body-parser");
const twilio = require("twilio");

const app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Twilio configuration
const accountSid = "YOUR_TWILIO_ACCOUNT_SID";
const authToken = "YOUR_TWILIO_AUTH_TOKEN";
const serviceSid = "YOUR_TWILIO_SERVICE_SID"; // For Twilio Verify API
const client = twilio(accountSid, authToken);

// Send verification code
app.post("/send-verification", async (req, res) => {
    const { phoneNumber } = req.body;

    try {
        const verification = await client.verify.v2
            .services(serviceSid)
            .verifications.create({ to: phoneNumber, channel: "sms" });

        res.status(200).send({ message: "Verification code sent!", verification });
    } catch (error) {
        res.status(500).send({ message: "Error sending verification code.", error: error.message });
    }
});

// Verify the code
app.post("/verify-code", async (req, res) => {
    const { phoneNumber, code } = req.body;

    try {
        const verificationCheck = await client.verify.v2
            .services(serviceSid)
            .verificationChecks.create({ to: phoneNumber, code });

        if (verificationCheck.status === "approved") {
            res.status(200).send({ message: "Phone number verified successfully!" });
        } else {
            res.status(400).send({ message: "Invalid verification code." });
        }
    } catch (error) {
        res.status(500).send({ message: "Error verifying code.", error: error.message });
    }
});

// Start server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
